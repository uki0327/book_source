
// ImgOutDemoView.cpp : CImgOutDemoView 클래스의 구현
//

#include "stdafx.h"
#include "ImgOutDemo.h"

#include "ImgOutDemoDoc.h"
#include "ImgOutDemoView.h"

#include <atlimage.h>
#include <comdef.h>

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CImgOutDemoView

IMPLEMENT_DYNCREATE(CImgOutDemoView, CView)

BEGIN_MESSAGE_MAP(CImgOutDemoView, CView)
	// 표준 인쇄 명령입니다.
	ON_COMMAND(ID_FILE_PRINT, &CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_DIRECT, &CView::OnFilePrint)
	ON_COMMAND(ID_FILE_PRINT_PREVIEW, &CView::OnFilePrintPreview)
	ON_WM_PAINT()
END_MESSAGE_MAP()

// CImgOutDemoView 생성/소멸

CImgOutDemoView::CImgOutDemoView()
{
	// TODO: 여기에 생성 코드를 추가합니다.

}

CImgOutDemoView::~CImgOutDemoView()
{
}

BOOL CImgOutDemoView::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: CREATESTRUCT cs를 수정하여 여기에서
	//  Window 클래스 또는 스타일을 수정합니다.

	return CView::PreCreateWindow(cs);
}

// CImgOutDemoView 그리기

void CImgOutDemoView::OnDraw(CDC* /*pDC*/)
{
	CImgOutDemoDoc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;

	// TODO: 여기에 원시 데이터에 대한 그리기 코드를 추가합니다.
}


// CImgOutDemoView 인쇄

BOOL CImgOutDemoView::OnPreparePrinting(CPrintInfo* pInfo)
{
	// 기본적인 준비
	return DoPreparePrinting(pInfo);
}

void CImgOutDemoView::OnBeginPrinting(CDC* /*pDC*/, CPrintInfo* /*pInfo*/)
{
	// TODO: 인쇄하기 전에 추가 초기화 작업을 추가합니다.
}

void CImgOutDemoView::OnEndPrinting(CDC* /*pDC*/, CPrintInfo* /*pInfo*/)
{
	// TODO: 인쇄 후 정리 작업을 추가합니다.
}


// CImgOutDemoView 진단

#ifdef _DEBUG
void CImgOutDemoView::AssertValid() const
{
	CView::AssertValid();
}

void CImgOutDemoView::Dump(CDumpContext& dc) const
{
	CView::Dump(dc);
}

CImgOutDemoDoc* CImgOutDemoView::GetDocument() const // 디버그되지 않은 버전은 인라인으로 지정됩니다.
{
	ASSERT(m_pDocument->IsKindOf(RUNTIME_CLASS(CImgOutDemoDoc)));
	return (CImgOutDemoDoc*)m_pDocument;
}
#endif //_DEBUG


// CImgOutDemoView 메시지 처리기

void CImgOutDemoView::OnPaint()
{
	CPaintDC dc(this); // device context for painting

	CImage Image;
	//비트맵 리소스를 로드하여 DIB를 만든다.
	Image.LoadFromResource(AfxGetInstanceHandle(), IDB_Image_Test);

	//비트맵 이미지에 대한 DC를 생성한다.
	CDC* pDC = CDC::FromHandle(Image.GetDC());
	//이 이미지DC에 문자열을 출력한다.
	pDC->SetBkMode(TRANSPARENT);
	pDC->TextOut(200, 30, TEXT("CImage sample!"));
	Image.ReleaseDC();

	//이미지를 화면DC에 출력한다.
	Image.BitBlt(dc.m_hDC, 0, 0);

	//화면DC에 문자열을 출력한다.
//	dc.SetBkMode(TRANSPARENT);
//	dc.TextOut(200, 30, TEXT("CImage sample!"));
}
